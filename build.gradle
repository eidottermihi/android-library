buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.1'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.1'
        classpath "com.android.databinding:dataBinder:1.0-rc2"
        classpath 'net.researchgate:gradle-release:2.2.2'
    }
}

allprojects {
    repositories {
        jcenter()
    }
    version = version
    group = 'io.freefair'
}

subprojects {
    apply plugin: 'com.android.library'

    android {
        compileSdkVersion 23
        buildToolsVersion "23.0.1"

        defaultConfig {
            minSdkVersion 1
            versionCode 1
            versionName version
        }
    }

    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'com.github.dcendents.android-maven'

    dependencies {
        testCompile 'junit:junit:4.12'
    }

    android.libraryVariants.all { variant ->

        if (variant.name.contains("release")) {
            task("sources${variant.name.capitalize()}Jar", type: Jar) {
                from variant.javaCompile.source
                classifier = 'sources'
            }

            task("javadoc${variant.name.capitalize()}", type: Javadoc) {
                description "Generates Javadoc for $variant.name."
                source = variant.javaCompile.source
                ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
                classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
                options.links("http://docs.oracle.com/javase/7/docs/api/");
                options.links("http://developer.android.com/reference/");
                failOnError false
            }

            task("javadoc${variant.name.capitalize()}Jar", type: Jar, dependsOn: "javadoc${variant.name.capitalize()}") {
                description "Generates Javadoc Jar for $variant.name."
                classifier = 'javadoc'
                from tasks.findByPath("javadoc${variant.name.capitalize()}").destinationDir
            }

            artifacts {
                archives tasks.findByPath("javadoc${variant.name.capitalize()}Jar")
                archives tasks.findByPath("sources${variant.name.capitalize()}Jar")
            }
        }
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "http://oss.jfrog.org/artifactory/oss-release-local") {
                    authentication(userName: bintray_user, password: bintray_api_key)
                    //set via ~/.gradle/gradle.properties
                }
                snapshotRepository(url: "http://oss.jfrog.org/artifactory/oss-snapshot-local") {
                    authentication(userName: bintray_user, password: bintray_api_key)
                    //set via ~/.gradle/gradle.properties
                }
                pom.groupId = 'io.freefair'
            }
        }
    }

    bintray {
        user = bintray_user
        key = bintray_api_key

        configurations = ['archives'] //When uploading configuration files
        // - OR -
        //publications = ['mavenStuff'] //When uploading Maven-based publication files
        // - AND/OR -
        dryRun = false //Whether to run this as dry-run, without deploying
        publish = true //If version should be auto published after an upload
        pkg {
            repo = 'maven'

            name = project.name
            websiteUrl = 'https://github.com/freefair/android-library'
            issueTrackerUrl = 'https://github.com/freefair/android-library/issues'
            vcsUrl = 'https://github.com/freefair/android-library.git'
            //licenses = ['Apache-2.0']
            //labels = ['gear', 'gore', 'gorilla']
            publicDownloadNumbers = true
            //attributes= ['a': ['ay1', 'ay2'], 'b': ['bee'], c: 'cee'] //Optional package-level attributes
            //Optional version descriptor
            version = version
        }
    }
}

apply plugin: 'net.researchgate.release'